// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ticketsRequerimientosBackend.Models;

public partial class CMSSoftwarecontrolContext : DbContext
{
    public CMSSoftwarecontrolContext(DbContextOptions<CMSSoftwarecontrolContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Agencia> Agencia { get; set; }

    public virtual DbSet<AsignacionTecnicoTicket> AsignacionTecnicoTicket { get; set; }

    public virtual DbSet<Cliente> Cliente { get; set; }

    public virtual DbSet<MasterTable> MasterTable { get; set; }

    public virtual DbSet<MensajeriaTicket> MensajeriaTicket { get; set; }

    public virtual DbSet<Ticketresolucion> Ticketresolucion { get; set; }

    public virtual DbSet<UsuarioPortalTicket> UsuarioPortalTicket { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Agencia>(entity =>
        {
            entity.HasKey(e => e.Codagencia).HasName("PK_agencia2");

            entity.ToTable("agencia");

            entity.Property(e => e.Codagencia)
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("codagencia");
            entity.Property(e => e.CampoA).HasColumnName("campoA");
            entity.Property(e => e.CampoB)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("campoB");
            entity.Property(e => e.Centrocostos).HasColumnName("centrocostos");
            entity.Property(e => e.CodCanton)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("codCanton");
            entity.Property(e => e.CodProv)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("codProv");
            entity.Property(e => e.Codcia)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("codcia");
            entity.Property(e => e.Codcliente)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("codcliente");
            entity.Property(e => e.Codfrecuencia)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("codfrecuencia");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.Estado).HasColumnName("estado");
            entity.Property(e => e.Fecrea)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fecrea");
            entity.Property(e => e.Horarioatenciond)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("horarioatenciond");
            entity.Property(e => e.Horarioatenciondm)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("horarioatenciondm");
            entity.Property(e => e.Horarioatencionh)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("horarioatencionh");
            entity.Property(e => e.Horarioatencionhm)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("horarioatencionhm");
            entity.Property(e => e.Latitud)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("latitud");
            entity.Property(e => e.Longitud)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("longitud");
            entity.Property(e => e.Nombre)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.Observacion)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("observacion");
            entity.Property(e => e.Tipo)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tipo");
        });

        modelBuilder.Entity<AsignacionTecnicoTicket>(entity =>
        {
            entity.HasKey(e => e.IdAsignacionTecnico);

            entity.ToTable("asignacionTecnicoTicket");

            entity.Property(e => e.IdAsignacionTecnico).HasColumnName("idAsignacionTecnico");
            entity.Property(e => e.CodTenicUser)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("codTenicUser");
            entity.Property(e => e.Fechacrea)
                .HasColumnType("datetime")
                .HasColumnName("fechacrea");
            entity.Property(e => e.Fechares)
                .HasColumnType("datetime")
                .HasColumnName("fechares");
            entity.Property(e => e.IdRequerimiento).HasColumnName("idRequerimiento");
            entity.Property(e => e.ResTecnico)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("resTecnico");
            entity.Property(e => e.UrlA)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("urlA");
            entity.Property(e => e.UrlB)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("urlB");
        });

        modelBuilder.Entity<Cliente>(entity =>
        {
            entity.HasKey(e => new { e.Codcliente, e.Ruc }).HasName("PK_cliente1_1");

            entity.ToTable("cliente");

            entity.Property(e => e.Codcliente)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("codcliente");
            entity.Property(e => e.Ruc)
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasColumnName("ruc");
            entity.Property(e => e.Codcia)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("codcia");
            entity.Property(e => e.Coduser)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("coduser");
            entity.Property(e => e.Correomantenimiento)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("correomantenimiento");
            entity.Property(e => e.Correopago)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("correopago");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.Extension1)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("extension1");
            entity.Property(e => e.Extension2)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("extension2");
            entity.Property(e => e.Fechacontfinal)
                .HasColumnType("datetime")
                .HasColumnName("fechacontfinal");
            entity.Property(e => e.Fechacontinicio)
                .HasColumnType("datetime")
                .HasColumnName("fechacontinicio");
            entity.Property(e => e.Nombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.NombreMantenimiento)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("nombreMantenimiento");
            entity.Property(e => e.NombrePago)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("nombrePago");
            entity.Property(e => e.Observacion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("observacion");
            entity.Property(e => e.Replegal)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("replegal");
            entity.Property(e => e.Telfclimanteni)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("telfclimanteni");
            entity.Property(e => e.Telfpago)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("telfpago");
            entity.Property(e => e.Tipo)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("tipo");
        });

        modelBuilder.Entity<MasterTable>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Campo1)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("campo1");
            entity.Property(e => e.Campo2)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("campo2");
            entity.Property(e => e.Codigo)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("codigo");
            entity.Property(e => e.Gestion)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasDefaultValueSql("('')")
                .IsFixedLength()
                .HasColumnName("gestion");
            entity.Property(e => e.Grupo)
                .HasMaxLength(70)
                .HasColumnName("grupo");
            entity.Property(e => e.Lencod)
                .HasColumnType("decimal(2, 0)")
                .HasColumnName("lencod");
            entity.Property(e => e.Master)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("master");
            entity.Property(e => e.Nombre)
                .HasMaxLength(200)
                .HasColumnName("nombre");
            entity.Property(e => e.Nomtag)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasDefaultValueSql("(' ')")
                .IsFixedLength()
                .HasColumnName("nomtag");
            entity.Property(e => e.Pideval).HasColumnName("pideval");
            entity.Property(e => e.Sgrupo)
                .HasMaxLength(70)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("sgrupo");
            entity.Property(e => e.Valor)
                .HasDefaultValueSql("((0))")
                .HasColumnType("decimal(15, 2)")
                .HasColumnName("valor");
            entity.Property(e => e.Valor2)
                .HasColumnType("decimal(16, 2)")
                .HasColumnName("VALOR2");
        });

        modelBuilder.Entity<MensajeriaTicket>(entity =>
        {
            entity.HasKey(e => e.Idmensaje);

            entity.ToTable("mensajeriaTicket");

            entity.Property(e => e.Idmensaje).HasColumnName("idmensaje");
            entity.Property(e => e.Active)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('A')");
            entity.Property(e => e.Coduser)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("coduser");
            entity.Property(e => e.Fechaemit)
                .HasColumnType("datetime")
                .HasColumnName("fechaemit");
            entity.Property(e => e.IdRequerimiento).HasColumnName("idRequerimiento");
            entity.Property(e => e.Mensaje)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("mensaje");
        });

        modelBuilder.Entity<Ticketresolucion>(entity =>
        {
            entity.HasKey(e => e.IdRequerimiento).HasName("PK_ticketresolucion1");

            entity.ToTable("ticketresolucion");

            entity.Property(e => e.IdRequerimiento).HasColumnName("idRequerimiento");
            entity.Property(e => e.CodMaquina)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("codMaquina");
            entity.Property(e => e.Estado).HasColumnName("estado");
            entity.Property(e => e.Fechacrea)
                .HasColumnType("datetime")
                .HasColumnName("fechacrea");
            entity.Property(e => e.IdAgencia)
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("idAgencia");
            entity.Property(e => e.MensajeDelProblema)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("mensajeDelProblema");
            entity.Property(e => e.Obervacion)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("obervacion");
            entity.Property(e => e.Tipo)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tipo");
            entity.Property(e => e.UrlA)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("urlA");
            entity.Property(e => e.UrlB)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("urlB");
        });

        modelBuilder.Entity<UsuarioPortalTicket>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('A')");
            entity.Property(e => e.Apellido)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Correo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.IdCliente)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("idCliente");
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Rol)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Usuario)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}