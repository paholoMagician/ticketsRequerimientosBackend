// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ticketsRequerimientosBackend.Models;

public partial class CMSSoftwarecontrolContext : DbContext
{
    public CMSSoftwarecontrolContext(DbContextOptions<CMSSoftwarecontrolContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AsignacionTecnicoTicket> AsignacionTecnicoTicket { get; set; }

    public virtual DbSet<MensajeriaTicket> MensajeriaTicket { get; set; }

    public virtual DbSet<Ticketresolucion> Ticketresolucion { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AsignacionTecnicoTicket>(entity =>
        {
            entity.HasKey(e => e.IdAsignacionTecnico);

            entity.ToTable("asignacionTecnicoTicket");

            entity.Property(e => e.IdAsignacionTecnico).HasColumnName("idAsignacionTecnico");
            entity.Property(e => e.CodTenicUser)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("codTenicUser");
            entity.Property(e => e.Fechacrea)
                .HasColumnType("datetime")
                .HasColumnName("fechacrea");
            entity.Property(e => e.Fechares)
                .HasColumnType("datetime")
                .HasColumnName("fechares");
            entity.Property(e => e.IdRequerimiento).HasColumnName("idRequerimiento");
            entity.Property(e => e.ResTecnico)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("resTecnico");
            entity.Property(e => e.UrlA)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("urlA");
            entity.Property(e => e.UrlB)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("urlB");
        });

        modelBuilder.Entity<MensajeriaTicket>(entity =>
        {
            entity.HasKey(e => e.Idmensaje);

            entity.ToTable("mensajeriaTicket");

            entity.Property(e => e.Idmensaje).HasColumnName("idmensaje");
            entity.Property(e => e.Coduser)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("coduser");
            entity.Property(e => e.Fechaemit)
                .HasColumnType("datetime")
                .HasColumnName("fechaemit");
            entity.Property(e => e.IdRequerimiento).HasColumnName("idRequerimiento");
            entity.Property(e => e.Mensaje)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("mensaje");
        });

        modelBuilder.Entity<Ticketresolucion>(entity =>
        {
            entity.HasKey(e => e.IdRequerimiento).HasName("PK_ticketresolucion1");

            entity.ToTable("ticketresolucion");

            entity.Property(e => e.IdRequerimiento).HasColumnName("idRequerimiento");
            entity.Property(e => e.Estado).HasColumnName("estado");
            entity.Property(e => e.Fechacrea)
                .HasColumnType("datetime")
                .HasColumnName("fechacrea");
            entity.Property(e => e.Idcliente).HasColumnName("idcliente");
            entity.Property(e => e.Iduser).HasColumnName("iduser");
            entity.Property(e => e.MensajeDelProblema)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("mensajeDelProblema");
            entity.Property(e => e.MensajeResolucion)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("mensajeResolucion");
            entity.Property(e => e.Obervacion)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("obervacion");
            entity.Property(e => e.UrlA)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("urlA");
            entity.Property(e => e.UrlB)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("urlB");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}